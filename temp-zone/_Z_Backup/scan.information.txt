


.
.
.
----[scan.zip.2018.05.28.08]-----
.
--put, delete--

// @RequestBody pick the instance from the request body
@RequestMapping(method=RequestMethod.PUT,value="/topics/{id}")
public void updateTopic(@RequestBody Topic topic,@PathVariable String id)
{
    topicService.updateTopic(id, topic);
}


// @RequestBody pick the instance from the request body
@RequestMapping(method=RequestMethod.DELETE,value="/topics/{id}")
public void deleteTopic(@PathVariable String id)
{
    topicService.deleteTopic(id);
}

.
.
.
----[scan.zip.2018.05.28.07]-----
.
--Post--

//@RequestMapping ---> pick the instance from the request body
//method=RequestMethod.POST ---> set to post (default is GET)
//value="/topics" ---> 
//@RequestBody Topic topic ---> GET topic instance (so we can add object to array list)


// @RequestBody 
@RequestMapping(method=RequestMethod.POST,value="/topics")
 public void addTopic(@RequestBody Topic topic)
 {
	 topicService.addTopic(topic);
 }
.
.
.
----[scan.zip.2018.05.28.06]-----
.
--Get--
- API  \topics\some-id\ 
-- api return only the topic that is requested
-- url method access 
-- mapping annotation on mathod
-- stream filter

-- @PathVariable take String id data from the variable {id} data "/topics/{id}"

   //{id} -->  String id
   @RequestMapping("/topics/{id}")
   public Topic getTopic(@PathVariable String id) { }
.
.
.
----[scan.zip.2018.05.28.05]-----
.
--Get--
-- @RestController
-- @RequestMapping("/topics")
-- @Autowired - make instance to service (singletons) - to make injection (maven use this instance)
-- @Service - with getAllTopics() method.
.
.
.
----[scan.zip.2018.05.27.04]----
.
--Get--
-- @RestController
-- @RequestMapping("/topics")
-- return a class method list array (List<Topic>)
.
.
.
----[scan.zip.2018.05.27.04 --> scan.zip.2018.05.27.01]---
.
--Get--
-- @RestController
-- @RequestMapping("/topics")

-- @RestController
-- @RequestMapping("/hello")
